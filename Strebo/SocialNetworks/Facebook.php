<?php

namespace Strebo\SocialNetworks;

use Strebo;

class Facebook extends Strebo\AbstractSocialNetwork implements Strebo\PrivateInterface
{
    private $facebook;

    public function __construct()
    {
        parent::__construct("Facebook",
            "facebook",
            "#3b5999",
            [null, null, null],
            getenv("strebo_facebook_1"),
            getenv("strebo_facebook_2"),
            "http://strebo.net?Facebook=1");

        $this->facebook = new \Facebook\Facebook(
            ['app_id' => $this->getApiKey(),
                'app_secret' => $this->getApiSecret(),
                'default_graph_version' => 'v2.6']
        );
    }

    public function connect($code)
    {
        var_dump($code);
        $client=$this->facebook->getOAuth2Client();
        $token=$client->getAccessTokenFromCode($code);
        var_dump($token);
        return [];
    }

    public function getPersonalFeed($user)
    {
        //$request = new FacebookRequest(
          //  $session,
           // 'GET',
            //'/me/feed'
        //);
        
        $this->facebook->get('/me/feed');
        //$response = $request->execute();
        //$graphObject = $response->getGraphObject();
    }

    public function encodeJSON($json)
    {
        return parent::encodeJSON($json); // TODO: Change the autogenerated stub
    }

    public function formatTime($time)
    {
        return parent::formatTime($time); // TODO: Change the autogenerated stub
    }

    public function isTokenValid($user)
    {
        // TODO: Implement isTokenValid() method.
    }

}